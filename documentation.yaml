openapi: 3.0.0
info:
  title: Ecommerce web site backend
  description: Api's for Ecommerce website with crud operations and authentication
  version: 1.0.0
servers:
  - url: http://http://localhost:5500
    description: npm run server(to start the server)
paths:
  /user/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: User's name
                email:
                  type: string
                  format: email
                  description: User's email address
                password:
                  type: string
                  description: User's password
      responses:
        '201':
          description: User successfully registered
          content:
            application/json:
              example:
                msg: New user has been registered
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: Error message
        '409':
          description: User already exists
          content:
            application/json:
              example:
                msg: User already exists. Please log in.

  /user/login:
    post:
      summary: Login as a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: User's email address
                password:
                  type: string
                  description: User's password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              example:
                msg: Login successful
                AcessToken: <Access Token>
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: Error message
        '404':
          description: Email does not exist
          content:
            application/json:
              example:
                msg: Email does not exist
        '401':
          description: Password is incorrect
          content:
            application/json:
              example:
                msg: Password is incorrect

  /user/cart:
    get:
      summary: Get user's cart
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User's cart retrieved successfully
          content:
            application/json:
              example:
                cart:
                  - product: <Product Object>
                    quantity: <Quantity>
                  - product: <Product Object>
                    quantity: <Quantity>
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: Error message
        '404':
          description: User not found
          content:
            application/json:
              example:
                msg: User not found

  /user/addtocart:
    post:
      summary: Add a product to the user's cart
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: string
                  description: Product ID
                quantity:
                  type: integer
                  description: Quantity (optional, default 1)
      responses:
        '200':
          description: Product added to the cart successfully
          content:
            application/json:
              example:
                msg: Product added to the cart
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: Error message
        '404':
          description: Product is unavailable
          content:
            application/json:
              example:
                error: Product is unavailable

  /user/update:
    patch:
      summary: Update the product quantity in the user's cart
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: string
                  description: Product ID
                quantity:
                  type: integer
                  description: New quantity (optional, default 1)
      responses:
        '200':
          description: Quantity updated in the cart successfully
          content:
            application/json:
              example:
                msg: Quantity updated in the cart
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: Error message
        '404':
          description: Product not found in the cart
          content:
            application/json:
              example:
                error: Product not found in the cart

  /user/removefromcart/{product_id}:
    delete:
      summary: Remove a product from the user's cart
      security:
        - BearerAuth: []
      parameters:
        - name: product_id
          in: path
          required: true
          description: Product ID
          schema:
            type: string
      responses:
        '200':
          description: Product removed from the cart successfully
          content:
            application/json:
              example:
                msg: Product removed from the cart
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: Error message

  /user/placeorder:
    post:
      summary: Place an order for cart products
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Order placed successfully
          content:
            application/json:
              example:
                msg: Order placed successfully
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: Error message
        '404':
          description: User not found
          content:
            application/json:
              example:
                msg: User not found

  /user/user-orders:
    get:
      summary: Get the history of user's orders
      security:
        - BearerAuth: []
      responses:
        '200':
          description: History of user's orders retrieved successfully
          content:
            application/json:
              example:
                - _id: <Order ID>
                  products:
                    - product: <Product Object>
                      quantity: <Quantity>
                  orderDate: <Order Date>
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: Error message
        '404':
          description: User not found
          content:
            application/json:
              example:
                msg: User not found

  /user/order/{order_id}:
    get:
      summary: Get details of a specific order
      security:
        - BearerAuth: []
      parameters:
        - name: order_id
          in: path
          required: true
          description: Order ID
          schema:
            type: string
      responses:
        '200':
          description: Order details retrieved successfully
          content:
            application/json:
              example:
                _id: <Order ID>
                products:
                  - product: <Product Object>
                    quantity: <Quantity>
                orderDate: <Order Date>
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: Error message
        '404':
          description: Order not found
          content:
            application/json:
              example:
                msg: Order not found

  /product/addproduct:
    post:
      summary: Add a new product
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productName:
                  type: string
                  description: Product name
                productCategory:
                  type: string
                  description: Product category
                productDescription:
                  type: string
                  description: Product description
                productPrice:
                  type: string
                  description: Product price
                productAvailability:
                  type: boolean
                  description: Product availability
      responses:
        '200':
          description: Product added successfully
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: Error message

  /product/availability/{productId}:
    put:
      summary: Change product availability
      security:
        - BearerAuth: []
      parameters:
        - name: productId
          in: path
          required: true
          description: Product ID
          schema:
            type: string
        - name: productAvailability
          in: path
          required: true
          description:  product availability status
          schema:
            type: boolean
      responses:
        '200':
          description: Product availability updated successfully
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: Error message
        '404':
          description: Product not found
          content:
            application/json:
              example:
                message: Product not found

  /product/categories:
    get:
      summary: Get product categories
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Product categories retrieved successfully
          content:
            application/json:
              example:
                categories: ["Cat-I", "Cat-II", "Cat-III", "Cat-IV"]
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: Error message

  /product/getcategories/{id}:
    get:
      summary: Get products of a particular category
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Category ID
          schema:
            type: string
      responses:
        '200':
          description: Products of the specified category retrieved successfully
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: Error message
        '404':
          description: Category not found
          content:
            application/json:
              example:
                message: Category not found

  /product/getproduct/{id}:
    get:
      summary: Get product details by ID
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Product ID
          schema:
            type: string
      responses:
        '200':
          description: Product details retrieved successfully
        '400':
          description: Bad request
          content:
            application/json:
              example:
                error: Error message
        '404':
          description: Product not found
          content:
            application/json:
              example:
                message: Product not found

